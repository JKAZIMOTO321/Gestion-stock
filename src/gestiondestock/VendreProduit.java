/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestiondestock;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Ir Josue KAZIMOTO
 */
public class VendreProduit extends javax.swing.JPanel {

    /**
     * Creates new form VendreProduit
     */
    String idProd;
    int quantite;
    File dataFile = new File("stock.csv");
    File ventesFile = new File("stockVendus.csv");
    // Parametrage de la date 
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE dd/MM/yyyy", new Locale("fr","FR"));
        String dateFormatee = sdf.format(date);
        String dateF = dateFormatee.substring(0, 1).toUpperCase() + dateFormatee.substring(1);
    public VendreProduit() throws FileNotFoundException, IOException {
        initComponents();
        // Lecture du fichier pour chercher les produits qu'on peut vendre
        try (BufferedReader br = new BufferedReader(new FileReader(dataFile))) {
            String ligne;
            while ((ligne = br.readLine()) != null) {
                if (ligne.startsWith("ID") || ligne.trim().isEmpty()) continue; // ignorer l'entête
                String[] donnees = ligne.split(",");
                if (donnees.length >= 5) {
                    cbProduit.addItem(donnees[1]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, 
                    "Erreur de lecture du fichier stock.csv", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        cbProduit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String produit = (String) cbProduit.getSelectedItem();
                if (produit != null) {
                    try (BufferedReader br = new BufferedReader(new FileReader("stock.csv"))) {
                        String ligne;
                        while ((ligne = br.readLine()) != null) {
                            if (ligne.startsWith("ID") || ligne.trim().isEmpty()) continue;
                            String[] donnees = ligne.split(",");
                            if (produit.equals(donnees[1])) { // Colonne Nom Produit
                                txtPrixUnitaire.setText(donnees[3]); // Colonne Prix Unitaire
                                idProd = donnees[0];
                                // Mise à jour de la quantité max
                                float qteStock = Float.parseFloat(donnees[2].trim());
                                spinQuantite.setModel(new javax.swing.SpinnerNumberModel(1, 1, qteStock, 1));
                                
                                // Calcul du total par défaut
                                try {
                                    float prixUnitaire = Float.parseFloat(txtPrixUnitaire.getText());
                                    quantite = ((Number) spinQuantite.getValue()).intValue();

                                    float total = prixUnitaire * quantite;
                                    txtPrixTotal.setText(String.valueOf(total));
                                } catch (NumberFormatException ex) {
                                    txtPrixTotal.setText("");
                                }
                            }
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
        
        spinQuantite.addChangeListener(e -> {
            try {
                float prixUnitaire = Float.parseFloat(txtPrixUnitaire.getText());
                quantite = ((Number) spinQuantite.getValue()).intValue();

                float total = prixUnitaire * quantite;
                txtPrixTotal.setText(String.valueOf(total));
            } catch (NumberFormatException ex) {
                txtPrixTotal.setText("");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbProduit = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrixUnitaire = new javax.swing.JTextField();
        spinQuantite = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        txtPrixTotal = new javax.swing.JTextField();
        btnVendre = new javax.swing.JButton();
        btnAnnuler = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(720, 450));
        setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Vendre un produit");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Nom du Produit a vendre :");

        cbProduit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Quantite a vendre :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Prix Unitaire :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Prix Total :");

        btnVendre.setBackground(new java.awt.Color(51, 153, 255));
        btnVendre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnVendre.setText("Vendre");
        btnVendre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVendre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVendreMouseClicked(evt);
            }
        });

        btnAnnuler.setBackground(new java.awt.Color(51, 153, 255));
        btnAnnuler.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAnnuler.setText("Annuler");
        btnAnnuler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAnnuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAnnulerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(cbProduit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinQuantite))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrixUnitaire))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrixTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVendre, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbProduit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrixUnitaire, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinQuantite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrixTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVendre)
                    .addComponent(btnAnnuler))
                .addGap(83, 83, 83))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVendreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVendreMouseClicked
        // TODO add your handling code here:
        // Le fichier de travail
        int confirmation = JOptionPane.showConfirmDialog(this,
            "Voulez-vous Vendre ce produit "+cbProduit.getSelectedItem()+" ?\n Une quantite de :"+ quantite+"",
            "Confirmation",
            JOptionPane.YES_NO_OPTION);
        
        String produit = (String) cbProduit.getSelectedItem();
        
        if (confirmation == JOptionPane.YES_OPTION) {
            File stockTemp = new File("tempStock.csv");
            // Creation du fichier de temporaire stock existant s'il n'existe pas
            if (!stockTemp.exists()) {
                try {
                // Création du fichier et éventuellement de l'en-tête CSV
                if (stockTemp.createNewFile()) {
                    try (BufferedWriter bw = new BufferedWriter(new FileWriter(stockTemp, true))) {
                        bw.write("ID,Nom,Quantité,Prix Unitaire,Prix Total\n");
                    }
                }
                } catch (IOException ex) {
                }
            }
            try(BufferedReader br = new BufferedReader(new FileReader(dataFile));
                BufferedWriter bw = new BufferedWriter(new FileWriter(stockTemp, true))){
                String ligne;
                while((ligne = br.readLine())!= null){
                    // ignorer l'en tete car elle existe deja
                    if (ligne.startsWith("ID") || ligne.trim().isEmpty()) continue; 
                    String[] donnees = ligne.split(",");
                        if(produit.equals(donnees[1])){
                            String newLigne;
                            float ancienneQte = Float.parseFloat(donnees[2]);
                            float newQuantite = ancienneQte - quantite;
                            float prixU = Float.parseFloat(donnees[3]);
                            float newTotal = newQuantite * prixU;
                            newLigne =donnees[0]+","+donnees[1]+","+newQuantite +","+prixU+","+ newTotal;
                            ligne = newLigne;
                        }
                        bw.write(ligne +"\n");
                    }
                } catch (IOException ex) {
                System.getLogger(VendreProduit.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
            try {
                // remplacer ancien fichier par le nouveau
                Files.deleteIfExists(Paths.get("stock.csv"));
                Files.move(Paths.get("tempStock.csv"), Paths.get("stock.csv"));
            } catch (IOException ex) {
                System.getLogger(VendreProduit.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
                

            
            try (FileWriter fw = new FileWriter(ventesFile, true)) {
                fw.append(dateF+","+idProd + "," + produit + "," + quantite + "," + txtPrixUnitaire.getText() +","+txtPrixTotal.getText() +"," +"\n");
                JOptionPane.showMessageDialog(this,
                    "Produit Vendu avec succès !",
                    "Succès",
                JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                    "Erreur lors de l'enregistrement du la vente : " + e.getMessage(),
                    "Erreur",
                JOptionPane.ERROR_MESSAGE);
            }
            
            // L'utilisateur a cliqué sur "Oui" alors on vend
        }
        
    }//GEN-LAST:event_btnVendreMouseClicked

    private void btnAnnulerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnnulerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAnnulerMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnVendre;
    private javax.swing.JComboBox<String> cbProduit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner spinQuantite;
    private javax.swing.JTextField txtPrixTotal;
    private javax.swing.JTextField txtPrixUnitaire;
    // End of variables declaration//GEN-END:variables
}
